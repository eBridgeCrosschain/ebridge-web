
name: Build and Push Image
on:
  push:
    branches: ['release/*']
jobs:
  build-and-push-image:
    runs-on: eBridge-runner
    permissions:
      contents: read
    outputs:
      short_sha: ${{ steps.vars.outputs.short_sha }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set short git commit SHA
        id: vars
        run: |
          calculatedSha=$(git rev-parse --short ${{ github.sha }})
          echo "short_sha=$calculatedSha" >> "$GITHUB_OUTPUT"
      - name: Create image tag
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ secrets.REPOSITORY_REGION }}-docker.pkg.dev/${{ secrets.PROJECT_ID }}/${{ secrets.REPOSITORY }}/ebridge-web # change this to your project frontend name
          tags: |
            type=sha
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Build and push
        uses: docker/build-push-action@v5
        env:
          NEXT_PUBLIC_SENTRY_DNS: ${{ secrets.TESTNET_NEXT_PUBLIC_SENTRY_DNS }}              # testnet   mainnet
          NEXT_PUBLIC_ANALYTICS_ID: ${{ secrets.TESTNET_NEXT_NEXT_PUBLIC_ANALYTICS_ID }}
          NEXT_PUBLIC_APP_ENV: testnet             
          NEXT_PUBLIC_WALLET_CONNECT_PROJECT_ID: ${{ secrets.TESTNET_NEXT_PUBLIC_WALLET_CONNECT_PROJECT_ID }}
        with:
          context: .
          push: true
          platforms: linux/amd64
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            NEXT_PUBLIC_SENTRY_DNS=${{ secrets.TESTNET_NEXT_PUBLIC_SENTRY_DNS }}
            NEXT_PUBLIC_ANALYTICS_ID=${{ secrets.TESTNET_NEXT_NEXT_PUBLIC_ANALYTICS_ID }}
            NEXT_PUBLIC_APP_ENV=testnet
            NEXT_PUBLIC_WALLET_CONNECT_PROJECT_ID=${{ secrets.TESTNET_NEXT_PUBLIC_WALLET_CONNECT_PROJECT_ID }}
            ENV_NAME=testnet
  dispatch:
    runs-on: eBridge-runner
    needs: build-and-push-image
    steps:
      - name: Deploy
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.TOK }}
          script: |
            await github.rest.actions.createWorkflowDispatch({
              owner: 'eBridgeCrosschain',
              repo: 'devops',
              workflow_id: 'deployment_testnet.yaml',
              ref: 'main',
              inputs: {
                appName: 'ebridge-web-server',
                commit_sha: 'sha-${{ needs.build-and-push-image.outputs.short_sha }}',
              }
            })
